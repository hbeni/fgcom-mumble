name: "Build Release"

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  schedule:
    - cron: '0 0 * * *'  # end of each day (nightlies!)
  release:
    types:
      - created

jobs:

  ################################
  #    Normal release version    #
  ################################
  build_macPlugin:
    name: Build macOS plugin binary
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Build and run CATCH2 tests
      run: |
        make -C client/mumble-plugin/ CC=g++-10 CFLAGS="-I/usr/local/opt/openssl/include/ -L/usr/local/opt/openssl/lib/" test

    - name: Build Plugin
      run: |
        make -C client/mumble-plugin/ CC=g++-10 CFLAGS="-I/usr/local/opt/openssl/include/ -L/usr/local/opt/openssl/lib/" plugin
        mv client/mumble-plugin/fgcom-mumble.so fgcom-mumble-macOS.so
        xattr -dr com.apple.quarantine fgcom-mumble-macOS.so

    - name: Upload plugin
      uses: actions/upload-artifact@v2
      with:
        name: macPlugin
        path: fgcom-mumble-macOS.so
        retention-days: 1


  build_release_package:
    name: Build release package
    runs-on: ubuntu-latest
    needs: build_macPlugin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Setup submodules
      run: |
        git submodule init
        git submodule update client/mumble-plugin/lib/openssl
        git submodule update client/radioGUI/lib/jsimconnect

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.

    - name: Setup C++
      run: |
        sudo apt-get install libssl-dev mingw-w64 mingw-w64-common build-essential

    - name: Build release
      run: |
        make release

    - name: Get release version
      run: |
        echo "PLUGIN_VERSION=$(make showVer |grep VERSION: |cut -d':' -f2)" >> $GITHUB_ENV
        echo "PLUGIN_SHASHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Download mac plugin from job_1
      uses: actions/download-artifact@v2
      with:
        name: macPlugin

    - name: Add macPlugin to release files
      run: |
        mkdir dist
        mv *.zip fgcom-mumble-macOS.so dist/
        cd dist/
        zip -u fgcom-mumble-client-binOnly-${PLUGIN_VERSION}.zip fgcom-mumble-macOS.so
        mkdir fgcom-mumble-client-${PLUGIN_VERSION}/
        mkdir fgcom-mumble-client-${PLUGIN_VERSION}/plugin
        cp fgcom-mumble-macOS.so fgcom-mumble-client-${PLUGIN_VERSION}/plugin
        zip -u fgcom-mumble-client-${PLUGIN_VERSION}.zip fgcom-mumble-client-${PLUGIN_VERSION}/plugin/fgcom-mumble-macOS.so

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: fgcom-mumble-${{env.PLUGIN_VERSION}}_${{env.PLUGIN_SHASHORT}}
        path: dist/*.zip
        retention-days: 7




  ###############################
  #        Debug version        #
  ###############################
  build_macPlugin-debug:
    name: Build macOS plugin binary (debug version)
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Build and run CATCH2 tests
      run: |
        make -C client/mumble-plugin/ DEBUG+="-g3 -Og -DDEBUG" CC=g++-10 CFLAGS="-I/usr/local/opt/openssl/include/ -L/usr/local/opt/openssl/lib/" test

    - name: Build Plugin
      run: |
        make -C client/mumble-plugin/ DEBUG+="-g3 -Og -DDEBUG" CC=g++-10 CFLAGS="-I/usr/local/opt/openssl/include/ -L/usr/local/opt/openssl/lib/" plugin
        mv client/mumble-plugin/fgcom-mumble.so fgcom-mumble-macOS.so
        xattr -dr com.apple.quarantine fgcom-mumble-macOS.so

    - name: Upload plugin
      uses: actions/upload-artifact@v2
      with:
        name: macPlugin-debug
        path: fgcom-mumble-macOS.so
        retention-days: 1


  build_release_package-debug:
    name: Build release package (debug version)
    runs-on: ubuntu-latest
    needs: build_macPlugin-debug

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Setup submodules
      run: |
        git submodule init
        git submodule update client/mumble-plugin/lib/openssl
        git submodule update client/radioGUI/lib/jsimconnect

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.

    - name: Setup C++
      run: |
        sudo apt-get install libssl-dev mingw-w64 mingw-w64-common build-essential

    - name: Build release
      run: |
        make DEBUG+="-g3 -Og -DDEBUG" release

    - name: Get release version
      run: |
        echo "PLUGIN_VERSION=$(make showVer |grep VERSION: |cut -d':' -f2)" >> $GITHUB_ENV
        echo "PLUGIN_SHASHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Download mac plugin from job_1
      uses: actions/download-artifact@v2
      with:
        name: macPlugin-debug

    - name: Add macPlugin to release files
      run: |
        mkdir dist
        mv *.zip fgcom-mumble-macOS.so dist/
        cd dist/
        zip -u fgcom-mumble-client-binOnly-${PLUGIN_VERSION}.zip fgcom-mumble-macOS.so
        mkdir fgcom-mumble-client-${PLUGIN_VERSION}/
        mkdir fgcom-mumble-client-${PLUGIN_VERSION}/plugin
        cp fgcom-mumble-macOS.so fgcom-mumble-client-${PLUGIN_VERSION}/plugin
        zip -u fgcom-mumble-client-${PLUGIN_VERSION}.zip fgcom-mumble-client-${PLUGIN_VERSION}/plugin/fgcom-mumble-macOS.so

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: fgcom-mumble-${{env.PLUGIN_VERSION}}_${{env.PLUGIN_SHASHORT}}-debug
        path: dist/*.zip
        retention-days: 7
